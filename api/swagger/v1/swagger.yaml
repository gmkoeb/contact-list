---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/account":
    delete:
      summary: Deletes user account
      tags:
      - Account
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user deleted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    password:
                      type: string
                  required:
                  - password
              required:
              - user
  "/check_session":
    get:
      summary: Checks user session
      tags:
      - Check Session
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: valid session
        '401':
          description: invalid session
  "/contacts":
    post:
      summary: Creates a contact
      tags:
      - Contacts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: contact created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registration_number:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                zip_code:
                  type: string
                latitude:
                  type: integer
                longitude:
                  type: integer
              required:
              - name
              - registration_number
              - address
              - zip_code
              - phone
              - latitude
              - longitude
    get:
      summary: Retrieves contact list
      tags:
      - Contacts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: retrieves contacts list
  "/contacts/{id}":
    get:
      summary: Retrieves a contact
      tags:
      - Contacts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: contact found
        '404':
          description: contact not found
    patch:
      summary: Updates a contact
      tags:
      - Contacts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: contact updated with success
        '422':
          description: invalid parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registration_number:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                zip_code:
                  type: string
                latitude:
                  type: integer
                longitude:
                  type: integer
              required:
              - name
              - registration_number
              - address
              - zip_code
              - phone
              - latitude
              - longitude
    delete:
      summary: Deletes a contact
      tags:
      - Contacts
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: contact deleted with success
        '404':
          description: contact not found
  "/address_helper/{uf}/{city}/{address}":
    get:
      summary: Retrieves address information
      tags:
      - Address Helper
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      - name: uf
        in: path
        required: true
        schema:
          type: string
      - name: city
        in: path
        required: true
        schema:
          type: string
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: address found
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string
                        ibge:
                          type: string
                        gia:
                          type: string
                        ddd:
                          type: string
                        siafi:
                          type: string
                      required:
                      - cep
                      - logradouro
                      - bairro
                      - localidade
                      - uf
                required:
                - suggestions
  "/login":
    post:
      summary: Authenticates a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/signup":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - name
                  - email
                  - password
              required:
              - user
  "/logout":
    delete:
      summary: Signs out a user
      tags:
      - Users
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user signed out with success
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Your Bearer token
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
